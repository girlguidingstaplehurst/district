// Code generated by BuilderGen v0.3.0
package test

type NewEventBuilder struct {
	Adhesives         bool         `json:"adhesives"`
	CaptchaToken      string       `json:"captchaToken"`
	CarParking        bool         `json:"carParking"`
	CleaningAndDamage bool         `json:"cleaningAndDamage"`
	Contact           Contact      `json:"contact"`
	Event             EventDetails `json:"event"`
	PrivacyPolicy     bool         `json:"privacyPolicy"`
	TermsOfHire       bool         `json:"termsOfHire"`
}

func NewNewEventBuilder(b *NewEvent) *NewEventBuilder {
	if b == nil {
		return nil
	}

	return &NewEventBuilder{
		Adhesives:         b.Adhesives,
		CaptchaToken:      b.CaptchaToken,
		CarParking:        b.CarParking,
		CleaningAndDamage: b.CleaningAndDamage,
		Contact:           b.Contact,
		Event:             b.Event,
		PrivacyPolicy:     b.PrivacyPolicy,
		TermsOfHire:       b.TermsOfHire,
	}
}

func (b *NewEventBuilder) WithAdhesives(adhesives bool) *NewEventBuilder {
	b.Adhesives = adhesives
	return b
}

func (b *NewEventBuilder) WithCaptchaToken(captchaToken string) *NewEventBuilder {
	b.CaptchaToken = captchaToken
	return b
}

func (b *NewEventBuilder) WithCarParking(carParking bool) *NewEventBuilder {
	b.CarParking = carParking
	return b
}

func (b *NewEventBuilder) WithCleaningAndDamage(cleaningAndDamage bool) *NewEventBuilder {
	b.CleaningAndDamage = cleaningAndDamage
	return b
}

func (b *NewEventBuilder) WithContact(contact Contact) *NewEventBuilder {
	b.Contact = contact
	return b
}

func (b *NewEventBuilder) WithEvent(event EventDetails) *NewEventBuilder {
	b.Event = event
	return b
}

func (b *NewEventBuilder) WithPrivacyPolicy(privacyPolicy bool) *NewEventBuilder {
	b.PrivacyPolicy = privacyPolicy
	return b
}

func (b *NewEventBuilder) WithTermsOfHire(termsOfHire bool) *NewEventBuilder {
	b.TermsOfHire = termsOfHire
	return b
}

func (b *NewEventBuilder) Build() *NewEvent {
	return &NewEvent{
		Adhesives:         b.Adhesives,
		CaptchaToken:      b.CaptchaToken,
		CarParking:        b.CarParking,
		CleaningAndDamage: b.CleaningAndDamage,
		Contact:           b.Contact,
		Event:             b.Event,
		PrivacyPolicy:     b.PrivacyPolicy,
		TermsOfHire:       b.TermsOfHire,
	}
}
